```{julia}
include("../src/setup.jl")
```

## Plot der Plattenelemente

```{julia}
using MMJMesh.Gmsh
mQuadBTunr = MMJMesh.Gmsh.Mesh("gmsh/plate-BT-04.msh")
figBTunr = plotmesh(mQuadBTunr; title="quadratische Platte | 8m x 8m | 400 unregelmäßige Elemente")
```

Berechnung des Verschiebungsvektors

```{julia}
# Berechnung des Verschiebungsvektors
w = plate(mQuadBTunr, p1, "BTP")
# maximale Verschiebung in vertikaler Richtung
w_fe = maximum(w[1:3:end])
```

Vergleich mit Czerny Tafeln

```{julia}
# Vergleichswert der Czerny Tafeln
w_czerny = 5e3 * 8^4 / (31000e6 * 0.2^3) * 0.0152
# prozentuale Abweichung
100 * abs(w_fe - w_czerny) / w_czerny
```

_Abweichung = 0.515 %_

## Plot Verformung

```{julia}
GLMakie.activate!()
wBTunr = plotwBTP(mQuadBTunr, w;title="Verformung")
```

## Plot ungeglättete Schnittgrößen

Darstellungsfarben festlegen 

```{julia}
set_theme!(theme_minimal())
update_theme!(
    colormap=(:redblue,1.0),
    color=3,
    faceplotzscale=1,
    faceplotnpoints=15,
    edgesvisible=false,
    featureedgelinewidth=2.5,
)   
```

Momente

```{julia}
figBTmx = plotrBTP(mQuadBTunr, :mx, "Biegemoment mx", (-17000, 17000),nodal = false, a3d=true)
figBTmy= plotrBTP(mQuadBTunr, :my, "Biegemoment my", (-17000, 17000),nodal = false, a3d=true)
figBTmxy= plotrBTP(mQuadBTunr, :mxy, "Biegemoment mxy", (-4000, 4000),nodal = false, a3d=true)
```

Querkräfte

```{julia}
figBTqx= plotrBTP(mQuadBTunr, :qx, "Querkraft qx", (-17000, 17000),nodal = false, a3d=true)
figBTqy= plotrBTP(mQuadBTunr, :qy, "Querkraft qy", (-17000, 17000),nodal = false, a3d=true)
```

## Plot geglättete Schnittgrößen

Momente

```{julia}
figBTmxGlatt= plotrBTP(mQuadBTunr, :mx, "Biegemoment mx", (-17000, 17000),nodal = true, a3d=true)
figBTmyGlatt= plotrBTP(mQuadBTunr, :my, "Biegemoment my", (-17000, 17000),nodal = true, a3d=true)
figBTmxyGlatt= plotrBTP(mQuadBTunr, :mxy, "Biegemoment mxy", (-4000, 4000),nodal = true, a3d=true)
```

Querkräfte

```{julia}
figBTqxGlatt= plotrBTP(mQuadBTunr, :qx, "Querkraft qx", (-17000, 17000),nodal = true, a3d=true)
figBTqyGlatt=plotrBTP(mQuadBTunr, :qy, "Querkraft qy", (-17000, 17000),nodal = true, a3d=true)
```


## Speichern der generierten Plots

```{julia}
using CairoMakie
save("Beispiel-01-BTunr-mesh.png",figBTunr)
save("Beispiel-01-BTunr-w.png",wBTunr)

save("Beispiel-01-BTunr-mx.png",figBTmx)
save("Beispiel-01-BTunr-my.png",figBTmy)
save("Beispiel-01-BTunr-mxy.png",figBTmxy)
save("Beispiel-01-BT-qx.png",figBTqx)
save("Beispiel-01-BT-qy.png",figBTqy)

save("Beispiel-01-BTunr-mx-glatt.png",figBTmxGlatt)
save("Beispiel-01-BTunr-my-glatt.png",figBTmyGlatt)
save("Beispiel-01-BTunr-mxy-glatt.png",figBTmxyGlatt)
save("Beispiel-01-BT-qx-glatt.png",figBTqxGlatt)
save("Beispiel-01-BT-qy-glatt.png",figBTqyGlatt)
```