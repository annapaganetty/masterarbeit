```{julia}
include("../src/setup.jl")
```


## Plot der Plattenelemente

```{julia}
using MMJMesh.Gmsh
mCirc = MMJMesh.Gmsh.Mesh(
        """
        SetFactory("OpenCASCADE");
        Point(1) = {0, 0, 0};
        Disk(1) = {0, 0, 0, $(p1.r), $(p1.r)};
        Point{1} In Surface{1};
        Recombine Surface {1};
        MeshSize{:} = 0.25;
        MeshSize{:} = 1.25;
        Mesh 2;
        """
)
figCirc = plotmesh(mCirc; title="runde Platte | d = 8m | 165 unregelmäßige Elemente")
```

# Vergleichswerte aus Altenbach et. al

```{julia}
K = p1.E*p1.h^3 / 12*(1-p1.ν^2)
w_altenbach = (p1.q * p1.r^4) / (64*K)
v_altenbach = (p1.q * p1.r) / 2
```

# Berechnung des Verschiebung

```{julia}
w = plate(mCirc, p1, "BTP")
# maximale Verschiebung in vertikaler Richtung
w_fe = maximum(w[1:3:end])
```

# prozentuale Abweichung Verschiebung

```{julia}
100 * abs(w_fe - w_altenbach) / w_altenbach
```

_Abweichung = 0.680 %_

## Plot Verformung

```{julia}
GLMakie.activate!()
wCirc = plotwBTP(mCirc, w;title="Verformung")
```

## Speichern der generierten Plots

```{julia}
using CairoMakie
save("Beispiel-01-Circ-mesh.png",figCirc)
save("Beispiel-01-BTunr-w.png",wCirc)
```