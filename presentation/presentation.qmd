---
title: "Finite Elemente für Plattentragwerke"
subtitle: "Theoretische Grundlagen und Programmierung in JULIA"
author: "Anna Paganetty"
format:
    revealjs: default
---

<!-- {{< include definitionen.qmd >}} -->


## Problemstellung {.smaller}
::: {.fragment .fade-in fragment-index=1}
- Aufarbeitung theoretischer Grundlagen
:::
::: {.fragment .fade-in fragment-index=2}
- Formulierung für allgemeine Vierecke (DKQ-Elemente)
:::
::: {.fragment .fade-in fragment-index=3}
- Implementierung in JULIA
:::
::: {.fragment .fade-in fragment-index=4}
- Anwendung
:::

:::: {.columns}
::: {.column width="34%"}
::: {.fragment .fade-in-then-semi-out fragment-index=2}
![](images/Geometrie-BTP.png){width="80%"}
:::
:::
::: {.column width="33%"}
::: {.fragment .fade-in-then-semi-out fragment-index=3}
![](images/logo_julia.svg){width="80%"}
:::
:::
::: {.column width="33%"}
::: {.fragment .fade-in-then-semi-out fragment-index=4}
![](images/Buerogebaeude.png)
:::
:::
::::


::: {.notes}
Ziel war es zunächst die theoretischen Grundlagen der FEM für Platten aufzuarbeiten und dabei die Kirchhoff Plattentheorie als Basis zu nehmen. Weiter sollte ich dann zwei Elementansätze für die FEM, den DKQ Ansatz und den Bogner-Fox-Schmit Ansatz nachvollziehen und beschreiben. Beide genannte Formulieren sollten dann in der Programmierumgebung JULIA implementiert werden und an Minimalbeispielen getestet werden. Abschließen sollte mit dem Programm eine komplexe Platte, angelehnt an ein Praxisbeispiel, berechnet werden.
:::

## FE-Methode{.smaller}

:::: {.columns}
::: {.column width="50%"}
::: {.r-stack}
![](images/physikalisches-Problem.png){.fragment .fade-in-then-out width=100% fragment-index=1}

![](images/Schnittgroessen.png){.fragment .fade-in-then-out width=100% fragment-index=2}

![](images/Ablauf-FEM-Berechnung.png){.fragment .fade-in width=100% fragment-index=3}
:::

:::
::: {.column width="50%"}


:::{.fragment .fade-in fragment-index=1}
1. **physikalisches Problem:** Platte 
:::

:::{.fragment .fade-in fragment-index=2}
2. **starke Form:** mathematisches Modell + Randbedingungen
:::

:::{.fragment .fade-in fragment-index=3}
3. **schwache Form:** Basis für die FE-Berechnung
:::

:::{.fragment .fade-in fragment-index=4}
4. **Approximation:** Linearkombination vordefinierter Funktionen
:::

:::{.fragment .fade-in fragment-index=5}
5. **lineares Gleichungssystem:** Linearkombination eingesetzt in die _schwache Form_
:::

:::
::::

::: {.fragment .fade-in fragment-index=6}
::: {.fragment .highlight-red}
__Ziel:__ Lösungsfunktion für die Verformung $w$ finden
:::
:::

::: {.notes}
Die FE-Methode ist eine sehr komplexe numerische Berechnungsmethode, die nur schwierig in 15 Minuten zu erklären ist. Basis ist ein physikalisches Problem, hier eine Platte, das Ziel ist es die Verformung zu berechnen. Aus dieser Platte ergibt sich durch materialspezifische Parameter und Belastungen aus dem Gleichgewicht ein mathematisches Modell und die Randbedingungen in Form von Auflagerbedingungen. Aus der starken Form wird die schwache Form abgeleitet, die die Basis für die Berechnung bildet. Wichtig ist zu wissen, dass die FEM nur eine Annäherungslösung ist durch die Linearkombination vordefinierter Funktionen funktioniert. Darauf werde ich gleich nochmal eingehen. Letztendlich ergibt sich ein lineares Gleichungssystem durch dessen Lösung die Verformung berechnet werden kann.

Auf die Punkte 1 und 4 werde ich jetzt noch etwas genauer eingehen.

:::

## physikalische Problem: Kirchhoff {.smaller}

:::: {.columns}
::: {.column width="50%"}
::: {.r-stack}
![](images/Kirchhoff.png){.fragment .fade-in-then-out width=100% fragment-index=1}

![](images/Verschiebung.png){.fragment .fade-in-then-out width=100% fragment-index=2}

![](images/Biegemoment.png){.fragment .fade-in width=100% fragment-index=3}

![](images/Schnittgroessen.png){.fragment .fade-in width=100% fragment-index=4}
:::
:::
::: {.column width="50%"}

:::{.fragment .fade-in fragment-index=1}
_schubstarre Platte_ 
_(Kirchhoff Plattentheorie)_
:::

:::{.fragment .fade-in fragment-index=2}
1. Verschiebungen & Verdrehungen
:::

:::{.fragment .fade-in fragment-index=3}
2. Verzerrungen
:::

:::{.fragment .fade-in fragment-index=3}
3. Spannungen
:::

:::{.fragment .fade-in fragment-index=3}
4. Schnittgrößen
:::

:::{.fragment .fade-in fragment-index=4}
5. Gleichgewichtsbeziehungen
:::

:::
::::

:::{.fragment .fade-in fragment-index=5}
$\rightarrow$ mathematisches Modell des physikalischen Problems: *Differentialgleichung*

$$
 D \cdot [\frac{\partial^4 w}{\partial x^4} + 2 \cdot \frac{\partial^2 w}{\partial x^2 \partial y^2} + \frac{\partial^4 w}{\partial y^4}] = q 
$$
:::

::: {.notes}
Das physikalische Problem war in meinem Fall das Plattentragwerk und als Grundlage dafür die Kirchhoff Plattentheorie. Platten nach dieser Theorie werden auch schubstarre Platten genannt und entsprechen dem eindimensionalen Equivalent des Bernoulli Balkens. Es gelten also auch hier die kinematischen Annahmen der Normalenhypothese und der Hypothese vom Ebenbleiben des Querschnitts (das Kästchen bleibt wie es ist), so dass sich die Verformungen und Verdrehungen wie hier dargestellt verhalten. (Im Vergleich dazu die Reissner Mindlin Platte, bei der sich das Kästchen wie hier unten verhält) Aus den Annahmen ergeben sich die Verzerrungen Spannungen und Schnittgrößen und letztendlich die Gleichgewichtsbedingungen. Am Ende hat man dann die Differentialgleichung. 
:::

## Approximation {.smaller}

Basisideen: 

- Approximation durch Kombination vordefinierter Funktionen 
- Funktionen stückweise definieren auf Elementen

$$
\begin{align}
&w_h(x,y) = \varphi_1(x,y) \cdot \hat{w}_1 +  \varphi_2(x,y) \cdot \hat{w}_2 + ... + \varphi_N(x,y) \cdot \hat{w}_N = \sum_{i=1}^N \varphi_i(x,y) \cdot \hat{w}_i 
\end{align}
$$

:::: {.columns}
::: {.column width="50%"}
::: {.r-stack}
![](images/Plate9x9.png){.fragment .fade-in-then-out width=100% fragment-index=1}

![](images/Lagrange-Formfunktionen.png){.fragment .fade-in-then-out width=100% fragment-index=2}

![](images/Basisfunktionen_Bilinear.png){.fragment .fade-in width=100% fragment-index=3}

:::
:::
::: {.column width="50%"}
__Gegeben:__

Basisfunktionen $\varphi_1, \varphi_2,...,\varphi_N$ (elementweise definiert)

__Gesucht:__

reelle Zahlen $\hat{w}_i \in \mathbb{R}$ (Freiheitsgrade, _degrees of freedom_ (DOF))
:::
::::


::: {.notes}
Die eben erwähnet Approximation spiegelt sehr gut die Basisideen der FEM wider. Unser Problem, welches wir vorher definiert haben, wird in mehrere Elemente unterteilt, die jeweils über Knoten miteinander verbunden sind. Es wird ein Elementansatz mit sogenannten Formfunktionen gewählt, hier sind es linear Formfunktionen. Die Funktionen ergeben sich daraus, dass an jeder Ecke einmal der Wert 1 angenommen wird für die Verformung. Bei komplexeren Elementansätzen mit mehr als 4 Formfunktionen wird beispielsweise noch angenommen dass an den Ecken die Verdrehungen um die x- oder y Achse = 1 sind. Durch Kombination dieser Formfunktionen ergeben sich die Basisfunktionen phi. Hier sieht man die Platte die an allen Rändern gelagert ist und sich somit da nicht Verformen kann. An den Mittleren Knoten wird jeweils die Verformung = 1 gesetzt und somit ergeben sich die hier dargestellten Basisfunktionen. Wir erinnern uns, dass wir das Ziel haben die Verformungsfunktion w herauszufinden. Eine unbekannte Funktion herauszubekommen ist sehr schwierig, daher Nutzen wir eine Linearkombination und kombinieren die gerade beschriebenen Basisfunktionen mit reelen Zahlen, so wie es hier beschrieben ist. Wir haben also jetzt eine Funktion, die aus mehreren Basisfunktionen und Zahlen besteht. Die Funktionen kennen wir, die Zahlen wollen wir herausbekommen. Das Problem eine Lösungsfunktion zu finden wurde also ersetzt durch das Problem reele Zahlen zu finden. 
Die reellen Zahlen sind genau die Freiheitsgrade die wir bei dem Elementansatz angenommen haben. Hier also jeweils die Verschiebung an einem Punkt. Bei anderen Elemente kommen noch Verdrehungen hinzu. Der Elementansatz hier ist einer der simpelsten. In der Masterarbeit habe ich den DKQ Elementansatz beschrieben.

:::


## DKQ-Element {.smaller}

:::: {.columns}
::: {.column}
- _Discrete Kirchhoff Quadrilateral Element_
- 1981 veröffentlicht von Batoz und Tahar
- basierend auf Kirchhoff Plattentheorie
- angelehnt an DKT Element für Dreieckelemente
- 3 Freiheitsgrade je Eckknoten

:::
::: {.column}
![](images/DKQ-Element.png)
:::
::::


::: {.notes}
DKQ steht für Discrete Kirchhoff Quadrilateral Element. Das Discrete Kirchhoff Quadrilateral Element wurde erstmals 1981 von Batoz und Tahar veröffentlicht in einem Paper. Es basiert auf der Kirchhoff Plattentheorie und ist angelehnt an das entsprechende Dreieckselement. In der Abbildung ist das Element dargestellt mit 4 Knoten und  je 3 Freiheitsgraden pro Eckknoten. Diese Formulierung ist besonders wichtig für allgemeine Vierecke ohne rechte Winkel.
:::

# Lösungsansatz {.smaller}

:::: {.columns}
::: {.column width= "40%"}
![](images/Programmstruktur.png)
:::
::: {.column width= "60%"}
1. Erzeugung FE-Netz 

2. Parameterliste

3. Elementsteifigkeitsmatrizen und Elementlastvektoren als Daten dem Element angehängt 

4. Assemblierung $K$ und $r$ durch Abrufen der Daten 

5. Auflagerbedingungen an definierten Knoten und/oder Rändern

6. Lösung

7. Berechnung von Momenten und Querkräften
:::
::::

:::{.notes}
Die Umsetzung in Julia erfolgt gemäß dem mathematischen Modell. Die Basis bilden das Netz und die Eingabeparameter. Das Netz kann entweder durch die Definition von Knoten und Kanten erzeugt werden oder durch das Einlesen eine mesh Datei. Die Materialparameter wie das E-Modul werden in einer Parameterliste gespeichert. Elementsteifigkeitsmatrix und Elementlastvektor werden den Elementen durch die Funktionen ... angehängt und bei der Assemblierung der globalen Steifigkeitsmatrix und des globalen Lastvektors abgerufen und elementweise berechnet. Bei Bauingenieurtechnischen Fragenstellung ist es notwendig Randbedingungen in Form von Auflagerbedinungen festzulegen. Das wird durch die Funktion applyDirchletBCs() an ausgewählten Punkten und Rändern umgesetzt. Schlussendlich kann das lineare Gleichungssystem gelöst werden und Schnittgrößen im postprocessor() berechnet.
:::


## Validierung: Patch-Test {.smaller}


:::: {.columns}
::: {.column width= "40%"}
::: {.r-stack}
:::{.fragment .fade-in-then-out fragment-index=1}
![](images/Patch-Test-System.png)
:::
:::{.fragment .fade-in-then-out fragment-index=2}
![](images/Beispiel-00-mx.png)
:::
:::{.fragment .fade-in-then-out fragment-index=3}
![](images/Beispiel-00-my.png)
:::
:::{.fragment .fade-in-then-out fragment-index=4}
![](images/Beispiel-00-mxy.png)
:::
:::
:::
::: {.column width= "60%"}
:::{.fragment .fade-in fragment-index=1}

| Eingabeparameter  |                           |
|:------------------|:--------------------------|
|Plattendicke       | $d = 1.0$        |
|Elastizitätsmodul  | $E = 1.000$ |
|Querdehnzahl       | $\nu = 0.0$               |
|                   | $a = 20$ bzw. $a = 20$             |
|                   | $b = 10$ bzw. $b = 10$               |

:::
:::
::::

:::{.fragment .fade-in fragment-index=1}
Ziel: konstanter Spannungszustand 
:::

:::{.notes}
Um die Implementierung der allgemeinen Vierecksformulierung in Form des DKQ-Ansatzes zu validieren wurde zunächst der sogenannte Patch-Test durchgeführt. Ziel dessen ist eine Platte zu modellieren dessen Spannungszustand konstant sein muss. Wie in dem Paper von Batoz und Tahar beschrieben sind die Länge und Breite der Platte und die Momente an den Eckknoten der Platte so angeordnet, dass entlang der Plattenkanten ein konstantes Moment von 1 vorherrscht. Schauen wir uns die drei Biegemomente an, tut sich zwischen allen drei nicht wirklich etwas, aber genau das ist auch das Ziel. Alle Momentenverläufe müssen 1 sein. 
:::

<!-- 
## Validierung: Kreisplatte {.smaller}

:::: {.columns}
::: {.column width= "40%"}
![](images/Beispiel-01-Circ-mesh.png)
:::
::: {.column width= "60%"}

| Eingabeparameter  |                           |
|:------------------|:--------------------------|
|Radius             | $r = 8.0 \text{ m}$        |
|Plattendicke       | $d = 0.2 \text{ m}$        |
|Elastizitätsmodul  | $E = 31000*10^6 \text{ N/m}^2$|
|Querdehnzahl       | $\nu = 0.0$               |
|Flächenlast        | $q = 5000\text{ N/m}^2$|

:::
::::


maximale Verformung (Altenbach et. al, Abb. 3.35)
$$
w_{max} = 0.0154  \text{ m}
$$

maximale Verformung FE-Berechnung
$$
w_{fe} = 0.0155 \text{ m}
$$

Abweichung: _0.680 %_

:::{.notes}
Als zweites Validierungsbeispiel wurde eine Kreisplatte gewählt, dessen maximale Verformung mit der maximalen Verformung nach Altenbach verglichen wurde. Heraus kam eine hervorragende Übereinstimmung mit nur 0.68% Abweichung.
::: 
-->


## Validierung: Rechteckplatte {.smaller}

:::{.fragment .fade-in fragment-index=1}
:::: {.columns}
::: {.column width= "40%"}
![](images/Beispiel-01-BFS.png)
:::
::: {.column width= "60%"}

| Eingabeparameter       |                           |
|:------------------|:--------------------------|
|Plattendicke       | $d = 0.2 \text{ m}$        |
|Elastizitätsmodul  | $E = 31000*10^6 \text{ N/m}^2$|
|Flächenlast        | $p = 5000 \text{ N}$         |
|                   | $\nu = 0.0$               |

:::
::::
:::

:::{.fragment .fade-in fragment-index=2}
:::: {.columns}
::: {.column width= "40%"}
![](images/Beispiel-01-BT-w.png)
:::
::: {.column width= "60%"}

_Ergebnisse_

$$
\begin{align}
&\text{Czerny-Tafel: }
&&w_{max} = 0.001255  \text{ m} \\
&\text{FE-Berechnung: }
&&w_{fe} =  0.001262 \text{ m}
\end{align}
$$

$\rightarrow$ Abweichung: $0.566 \%$
:::
::::

:::

:::{.notes}
Zu guter Letzt wurde noch eine allseitig eingespannte Rechteckplatte berechnet mit 400 Elementen berechnet. Die Ergebnisse wurden mit den Werten aus den Czerny-Tafeln verglichen. Auch hier weicht die Verformung nur minimal ab. Auch die Momente und Querkräfte stimmen sehr gut überein. 

Bei den unterschiedlichen Darstellungen der Ergebnisse sieht man auf der linken Seite jeweils die unbehandelten Ergebnisse und auf der rechten seite die geglätteten Ergebnisse.

:::

## Validierung: Rechteckplatte {.smaller}

:::: {.columns}
::: {.column width= "50%"}
::: {.r-stack}
:::{.fragment .fade-in-then-out fragment-index=1}
![](images/Beispiel-01-BT-mx.png)
Czerny: $m_{x,min}= -16494.85$ kNm/m
:::
:::{.fragment .fade-in-then-out fragment-index=2}
![](images/Beispiel-01-BT-mxy.png)
:::
:::{.fragment .fade-in-then-out fragment-index=3}
![](images/Beispiel-01-BT-qx.png)
Czerny: $q_{x,erm}=\pm 17857.14$ kN/m
:::
:::
:::
::: {.column width= "50%"}
::: {.r-stack}
:::{.fragment .fade-in-then-out fragment-index=1}
![](images/Beispiel-01-BT-mx-glatt.png)
$m_{x,max}= 5633.80$ kNm/m
:::
:::{.fragment .fade-in-then-out fragment-index=2}
![](images/Beispiel-01-BT-mxy-glatt.png)
:::
:::{.fragment .fade-in-then-out fragment-index=3}
![](images/Beispiel-01-BT-qx-glatt.png)
:::

:::
:::
::::

## Validierung: Rechteckplatte {.smaller}

- Sprünge an Elementkanten: Diskretisierungsfehler
- geglättete Ergebnisse durch Interpolation und Mittelung 
- Verschiebung nähert sich exakter Lösung an mit zunehmender Anzahl an Elementen

![](images/Konvergenzplot_quadratischePlatte.png){width="50%"}


:::{.notes}
Die Sprünge an den Elementkanten werden Diskretisierungsfehler genannt und sind in kommerziellen Programmen in der Regel nicht zu sehen. Durch Interpolation und Mittelung der elementweisen Ergebnisse entsteht die Glättung.
Weiterhin ist wichtig zu erwähnen dass mit steigender Anzahl an Elementen sich auch die Verschiebung bei der quadratischen Platte immer näher der exakten Lösung annähert wie in dem Konvergenzplot zu erkennen ist.
:::

# Anwendung {.smaller}

:::: {.columns}
::: {.column}
reales Bauvorhaben
![](images/Buerogebaeude.png){width="100%"}
:::
::: {.column}
vereinfachtes System der Deckenplatte
![](images/Beispiel-02-BT-complex-mesh.png)
:::
::::

:::{.notes}
Das letzte Beispiel ist die Anwendung der implementierten Formulierung auf ein realitätsnahes Beispiel. Dafür wurde die Deckenplatten eines Bauvorhabens stark vereinfacht modelliert und berechnet.
:::

## Anwendung: Ergebnisse {.smaller}

:::: {.columns}
::: {.column}

::: {.r-stack}
:::{.fragment .fade-in-then-out fragment-index=1}
![](images/Beispiel-02-BT-complex-mx.png){width="500"}

![](images/bsp02-RFEM-Moment-mx.PNG){width="500"}
:::

:::{.fragment .fade-in-then-out fragment-index=2}
![](images/Beispiel-02-BT-complex-my.png){width="500"}

![](images/bsp02-RFEM-Moment-my.PNG){width="500"}
:::

:::{.fragment .fade-in fragment-index=3}
![](images/Beispiel-02-BT-complex-mxy.png){width="500"}

![](images/bsp02-RFEM-Moment-mxy.PNG){width="500"}
:::
:::

:::
::: {.column}
::: {.r-stack}
:::{.fragment .fade-in-then-out fragment-index=1}
Momentenverlauf $m_x$
:::
:::{.fragment .fade-in fragment-index=2}
Momentenverlauf $m_y$
:::
:::
:::{.fragment .fade-in fragment-index=1}
- Farbskalen sind aneinander angepasst
- nahezu identische Farbverläufe 
:::
:::{.fragment .fade-in  fragment-index=3}
:::{.fragment .highlight-red  fragment-index=4}

Minimal- und Maximal-Werte sind nicht Vergleichbar!
:::
:::{.fragment .fade-in  fragment-index=5}

$\rightarrow$ __Singularitäten:__ Konzentration von Querkräften und Momenten

kritische Punkte:

- Punktlager 
- Knicke in Wänden
- Wandenden
:::
:::
:::
::::

:::{.notes}  
Zur Vergleichbarkeit der Momentenverläufe wurden die Farbskalen, so gut es geht aneinander angepasst. Sowohl mx als auch my und mxy sind bei der eigenen Formulierung und bei der Berechnung durch RFEM nahezu kongruent.
Schaut man sich die Minimal und Maximale Werte jedoch an, ist dort keine Vergleichbarkeit gegeben. Das liegt nicht an der Qualität der Ergebnisse, sondern an den sogenannten Singularitäten, die auch in jeder kommerziellen Software auftreten. An kritischen Punkten wie Punktlagerungen, Knicken in Wände und Wandenden kommt es zu Spannungsspitzen und somit zu einen Konzentration von Querkräften und Momenten.
:::


# Fazit & Ausblick

- lückenhafte Literatur
- Implementierung in Programmierumgebung JULIA dennoch möglich 
$\rightarrow$ Reproduzierbarkeit der Ergebnisse


- Erweiterung für weitere Elementansätze, ggf. Kombination mit Dreieckelementen
- Erweiterung des Programms für Reissner-Mindlin Plattentheorie

:::{.notes} 
Die in der Aufgabenstellung getroffene Annahme dass vor allem die deutschsprachige Literatur sehr lückenhaft ist hat sich für mich bestätigt. Dennoch hat durch intensives Einarbeiten in das Thema die Implementierung in JULIA funktioniert und Ergebnisse aus kommerziellen Softwares haben sich reproduzieren lassen.#Mit persönlich hat die Auseinandersetzung mit den unterschiedlichen Literaturquellen auch noch einmal gezeigt wie unterschiedlich die Autoren das Thema angehen. Bei einem sind sich jedoch nahezu alle einig: Der Anwender sollte Hintergrundwissen zu der FEM haben wenn er sie anwendet. Mir hat es gezeigt wie wenig Ahnung ich von der Methode bisher hatte und hoffe das zukünftig an Hochschulen und Universitäten das Thema intensiver vertieft wird als es bei mir der Fall war, wobei ich da guter Dinge bin.

Als Erweiterung für dieses Programm kann ich mir Vorstellen dass weitere Elementansätze implementiert werden und evtl. auch eine Kombination mit Dreieckelementen möglich gemacht wird. Außerdem könnte die Reissner-Mindlin Plattentheorie umgesetzt werden.

Diskretisierungsfehler wird in kommerzieller Software nicht ausgegeben 
:::

# {background="#43464B" .center}


:::: {.columns}
::: {.column width="34%"}
:::
::: {.column width="33%"}
Vielen Dank! Fragen?
:::
::: {.column width="33%"}
:::
::::

## Kontaktdaten {.smaller background="#43464B" .center}


:::: {.columns}
::: {.column width="50%"}
![](images/HRW_Logo_cyan.svg)
Anna Paganetty

E-Mail: anna.paganetty@hs-ruhrwest.de

Telefon: +49 208 88254-467

![](images/qr-code-anna.png){width="20%"}
:::
::: {.column width="50%"}
Prüfer:

*Prof. Dr.-Ing. Matthias Baitsch*

Bauinformatik und Numerische Verfahren 

- Leiter des BIM-Instituts der Hochschule Bochum
- Mitglied des Instituts für Grundlagen des Bauingenieurwesens und Computerorientierte Methoden

![](images/hsbo_logo_RGB_Complete_Wide.svg){width="60%"}
![](images/qr-code-baitsch.png){width="20%"}
:::
::::

# Literatur {background="#43464B" .center}


:::: {.columns}
::: {.column width="34%"}
:::
::: {.column width="33%"}

:::
::: {.column width="33%"}
:::
::::
